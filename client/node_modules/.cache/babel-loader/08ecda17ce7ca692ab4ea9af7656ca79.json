{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/Users/AddUserForm/AddUserForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Select, Button, Row, Col, notification } from 'antd';\nimport { UserOutlined, MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { createUserApi } from '../../../../api/user';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport './AddUserForm.scss';\nexport default function AddUserForm(props) {\n  const {\n    setIsVisibleModal,\n    setReloadUsers\n  } = props;\n  const [userData, setUserData] = useState({});\n\n  const addUser = () => {\n    if (!userData.name || !userData.lastname || !userData.role || !userData.email || !userData.password || !userData.repeatPassword) {\n      notification[\"error\"]({\n        message: 'Todos los campos son obligatorios.'\n      });\n    } else if (userData.password !== userData.repeatPassword) {\n      notification[\"error\"]({\n        message: 'Las contrase침as no son iguales.'\n      });\n    } else {\n      const accessToken = getAccessTokenApi();\n      createUserApi(accessToken, userData).then(response => {\n        notification[\"success\"]({\n          message: response\n        });\n        setIsVisibleModal(false);\n        setReloadUsers(true);\n        setUserData({});\n      }).catch(err => {\n        notification[\"error\"]({\n          message: err\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-user-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, layout, {\n    name: \"basic\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Username\",\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your username!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Password\",\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your password!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    name: \"remember\",\n    valuePropName: \"checked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Remember me\")), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Submit\")))); // function AddForm(props) {\n  //     const { userData, setUserData, addUser } = props;\n  //     const { Option } = Select;\n  //     return (\n  //         <Form className=\"form-add\" onFinish={addUser}>\n  //             <Row gutter={24}>\n  //                 <Col span={12}>\n  //                     <Form.Item>\n  //                         <Input\n  //                             prefix={<UserOutlined />}\n  //                             placeholder=\"Nombre\"\n  //                             value={userData.name}\n  //                             onChange={e => setUserData({ ...userData, name: e.target.value })}\n  //                         />\n  //                     </Form.Item>\n  //                 </Col>\n  //                 <Col span={12}>\n  //                     <Form.Item>\n  //                         <Input\n  //                             prefix={<UserOutlined />}\n  //                             placeholder=\"Apellido\"\n  //                             value={userData.lastname}\n  //                             onChange={e => setUserData({ ...userData, lastname: e.target.value })}\n  //                         />\n  //                     </Form.Item>\n  //                 </Col>\n  //             </Row>\n  //             <Row gutter={24}>\n  //                 <Col span={12}>\n  //                     <Form.Item>\n  //                         <Input\n  //                             prefix={<MailOutlined />}\n  //                             placeholder=\"Correo electr칩nico\"\n  //                             value={userData.email}\n  //                             onChange={e => setUserData({ ...userData, email: e.target.value })}\n  //                         />\n  //                     </Form.Item>\n  //                 </Col>\n  //                 <Col span={12}>\n  //                     <Form.Item>\n  //                         <Select\n  //                             placeholder=\"Selecciona un rol\"\n  //                             onChange={e => setUserData({ ...userData, role: e})}\n  //                             value={userData.role}\n  //                         >\n  //                             <Option value=\"admin\">Administrador</Option>\n  //                             <Option value=\"editor\">Editor</Option>\n  //                             <Option value=\"reviwer\">Revisor</Option>\n  //                         </Select>\n  //                     </Form.Item>\n  //                 </Col>\n  //             </Row>\n  //             <Row gutter={24}>\n  //                 <Col span={12}>\n  //                     <Form.Item>\n  //                         <Input\n  //                             prefix={<LockOutlined />}\n  //                             type=\"password\"\n  //                             placeholder=\"Contrase침a\"\n  //                             value={userData.password}\n  //                             onChange={e => setUserData({...userData, password: e.target.value})}\n  //                         />\n  //                     </Form.Item>\n  //                 </Col>\n  //                 <Col span={12}>\n  //                     <Form.Item>\n  //                         <Input\n  //                             prefix={<LockOutlined />}\n  //                             type=\"password\"\n  //                             placeholder=\"Repetir contrase침a\"\n  //                             value={userData.repeatPassword}\n  //                             onChange={e => setUserData({...userData, repeatPassword: e.target.value})}\n  //                         />\n  //                     </Form.Item>\n  //                 </Col>\n  //             </Row>\n  //             <Form.Item>\n  //                 <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\">\n  //                     Crear usuario\n  //                 </Button>\n  //             </Form.Item>\n  //         </Form>\n  //     )\n  // }\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/Users/AddUserForm/AddUserForm.js"],"names":["React","useState","Form","Input","Select","Button","Row","Col","notification","UserOutlined","MailOutlined","LockOutlined","createUserApi","getAccessTokenApi","AddUserForm","props","setIsVisibleModal","setReloadUsers","userData","setUserData","addUser","name","lastname","role","email","password","repeatPassword","message","accessToken","then","response","catch","err","layout","remember","onFinish","onFinishFailed","required","tailLayout"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Select, Button, Row, Col, notification } from 'antd';\nimport { UserOutlined, MailOutlined, LockOutlined } from '@ant-design/icons';\nimport { createUserApi } from '../../../../api/user';\nimport { getAccessTokenApi } from '../../../../api/auth';\n\nimport './AddUserForm.scss';\n\nexport default function AddUserForm(props) {\n    const { setIsVisibleModal, setReloadUsers } = props;\n    const [userData, setUserData] = useState({});\n\n    const addUser = () => {\n        if(\n            !userData.name ||\n            !userData.lastname ||\n            !userData.role ||\n            !userData.email ||\n            !userData.password ||\n            !userData.repeatPassword\n        ) {\n            notification[\"error\"]({\n                message: 'Todos los campos son obligatorios.'\n            })\n        } else if (userData.password !== userData.repeatPassword) {\n            notification[\"error\"]({\n                message: 'Las contrase침as no son iguales.'\n            })\n        } else {\n            const accessToken = getAccessTokenApi();\n\n            createUserApi(accessToken, userData)\n            .then(response => {\n                notification[\"success\"]({\n                    message: response\n                })\n                setIsVisibleModal(false);\n                setReloadUsers(true);\n                setUserData({});\n            })\n            .catch(err => {\n                notification[\"error\"]({\n                    message: err\n                })\n            })\n        }\n    }\n\n    return (\n        <div className=\"add-user-form\">\n\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{\n                    remember: true,\n                }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n                >\n                <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your username!',\n                    },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'Please input your password!',\n                    },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                    </Button>\n                </Form.Item>\n                </Form>\n\n            {/* <AddForm\n                userData={userData}\n                setUserData={setUserData}\n                addUser={addUser}\n            /> */}\n        </div>\n    )\n    \n    // function AddForm(props) {\n    //     const { userData, setUserData, addUser } = props;\n    //     const { Option } = Select;\n\n    //     return (\n    //         <Form className=\"form-add\" onFinish={addUser}>\n    //             <Row gutter={24}>\n    //                 <Col span={12}>\n    //                     <Form.Item>\n    //                         <Input\n    //                             prefix={<UserOutlined />}\n    //                             placeholder=\"Nombre\"\n    //                             value={userData.name}\n    //                             onChange={e => setUserData({ ...userData, name: e.target.value })}\n    //                         />\n    //                     </Form.Item>\n    //                 </Col>\n    //                 <Col span={12}>\n    //                     <Form.Item>\n    //                         <Input\n    //                             prefix={<UserOutlined />}\n    //                             placeholder=\"Apellido\"\n    //                             value={userData.lastname}\n    //                             onChange={e => setUserData({ ...userData, lastname: e.target.value })}\n    //                         />\n    //                     </Form.Item>\n    //                 </Col>\n    //             </Row>\n    //             <Row gutter={24}>\n    //                 <Col span={12}>\n    //                     <Form.Item>\n    //                         <Input\n    //                             prefix={<MailOutlined />}\n    //                             placeholder=\"Correo electr칩nico\"\n    //                             value={userData.email}\n    //                             onChange={e => setUserData({ ...userData, email: e.target.value })}\n    //                         />\n    //                     </Form.Item>\n    //                 </Col>\n    //                 <Col span={12}>\n    //                     <Form.Item>\n    //                         <Select\n    //                             placeholder=\"Selecciona un rol\"\n    //                             onChange={e => setUserData({ ...userData, role: e})}\n    //                             value={userData.role}\n    //                         >\n    //                             <Option value=\"admin\">Administrador</Option>\n    //                             <Option value=\"editor\">Editor</Option>\n    //                             <Option value=\"reviwer\">Revisor</Option>\n    //                         </Select>\n    //                     </Form.Item>\n    //                 </Col>\n    //             </Row>\n    //             <Row gutter={24}>\n    //                 <Col span={12}>\n    //                     <Form.Item>\n    //                         <Input\n    //                             prefix={<LockOutlined />}\n    //                             type=\"password\"\n    //                             placeholder=\"Contrase침a\"\n    //                             value={userData.password}\n    //                             onChange={e => setUserData({...userData, password: e.target.value})}\n    //                         />\n    //                     </Form.Item>\n    //                 </Col>\n    //                 <Col span={12}>\n    //                     <Form.Item>\n    //                         <Input\n    //                             prefix={<LockOutlined />}\n    //                             type=\"password\"\n    //                             placeholder=\"Repetir contrase침a\"\n    //                             value={userData.repeatPassword}\n    //                             onChange={e => setUserData({...userData, repeatPassword: e.target.value})}\n    //                         />\n    //                     </Form.Item>\n    //                 </Col>\n    //             </Row>\n    //             <Form.Item>\n    //                 <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\">\n    //                     Crear usuario\n    //                 </Button>\n    //             </Form.Item>\n    //         </Form>\n    //     )\n    // }\n}"]},"metadata":{},"sourceType":"module"}