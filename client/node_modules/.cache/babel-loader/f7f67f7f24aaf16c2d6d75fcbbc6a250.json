{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/providers/AuthProvider.js\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport { getAccessTokenApi, getRefreshTokenApi, refreshAccessTokenApi, logout } from '../api/auth';\nexport const AuthContext = createContext();\nexport default function AuthProvider(props) {\n  const {\n    children\n  } = props;\n  const [user, setUser] = useState({\n    user: null,\n    isLoading: true\n  });\n  useEffect(() => {\n    checkUserLogin(setUser);\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, children);\n}\n\nfunction checkUserLogin(setUser) {}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/providers/AuthProvider.js"],"names":["React","useState","useEffect","createContext","getAccessTokenApi","getRefreshTokenApi","refreshAccessTokenApi","logout","AuthContext","AuthProvider","props","children","user","setUser","isLoading","checkUserLogin","cleanup","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,EAAgDC,qBAAhD,EAAuEC,MAAvE,QAAqF,aAArF;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;AAEP,eAAe,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC7BW,IAAAA,IAAI,EAAE,IADuB;AAE7BE,IAAAA,SAAS,EAAE;AAFkB,GAAD,CAAhC;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,cAAc,CAACF,OAAD,CAAd;AACA,WAAO,MAAM;AACTG,MAAAA,OAAO;AACV,KAFD;AAGH,GALQ,EAKN,CAACC,KAAD,CALM,CAAT;AAOA,sBAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEL,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,QAApC,CAAP;AACH;;AAED,SAASI,cAAT,CAAwBF,OAAxB,EAAiC,CAEhC","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport { getAccessTokenApi, getRefreshTokenApi, refreshAccessTokenApi, logout } from '../api/auth';\n\nexport const AuthContext = createContext();\n\nexport default function AuthProvider(props) {\n    const { children } = props;\n    const [user, setUser] = useState({\n        user: null,\n        isLoading: true\n    });\n\n    useEffect(() => {\n        checkUserLogin(setUser)\n        return () => {\n            cleanup\n        }\n    }, [input])\n\n    return <AuthContext.Provider value={user}>{children}</AuthContext.Provider>\n}\n\nfunction checkUserLogin(setUser) {\n\n}"]},"metadata":{},"sourceType":"module"}