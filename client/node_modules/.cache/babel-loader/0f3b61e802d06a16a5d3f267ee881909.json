{"ast":null,"code":"import { basePath, apiVersion } from './config';\nexport function getMenuApi() {\n  const url = `${basePath}/${apiVersion}/get-menus`;\n  return fetch(url).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function updateMenuApi(token, menuId, data) {\n  const url = `${basePath}/${apiVersion}/update-menu/${menuId}`;\n  const params = {\n    method: 'PUT',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(data)\n  };\n  return fetch(url, params).then(response => {\n    return response;\n  }).then(result => {\n    return result.message;\n  }).catch(err => {\n    return err;\n  });\n}\nexport function activateMenuApi(token, menuId, status) {\n  const url = `${basePath}/${apiVersion}/activate-menu/${menuId}`;\n  const params = {\n    method: 'PUT',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify({\n      active: status\n    })\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result.message;\n  }).catch(err => {\n    console.log(err);\n  });\n}\nexport function addMenuApi(token, menu) {\n  const url = `${basePath}/${apiVersion}/add-menu`;\n  const params = {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    },\n    body: JSON.stringify(menu)\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {});\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/api/menu.js"],"names":["basePath","apiVersion","getMenuApi","url","fetch","then","response","json","result","catch","err","message","updateMenuApi","token","menuId","data","params","method","headers","Authorization","body","JSON","stringify","activateMenuApi","status","active","console","log","addMenuApi","menu"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,UAArC;AAEA,OAAO,SAASC,UAAT,GAAsB;AACzB,QAAMC,GAAG,GAAI,GAAEH,QAAS,IAAGC,UAAW,YAAtC;AAEA,SAAOG,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgBC,QAAQ,IAAI;AAC/B,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAGNF,IAHM,CAGDG,MAAM,IAAI;AACZ,WAAOA,MAAP;AACH,GALM,EAMNC,KANM,CAMAC,GAAG,IAAI;AACV,WAAOA,GAAG,CAACC,OAAX;AACH,GARM,CAAP;AASH;AAED,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8BC,MAA9B,EAAsCC,IAAtC,EAA4C;AAC/C,QAAMZ,GAAG,GAAI,GAAEH,QAAS,IAAGC,UAAW,gBAAea,MAAO,EAA5D;AAEA,QAAME,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAEN;AAFV,KAFE;AAMXO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AANK,GAAf;AASA,SAAOX,KAAK,CAACD,GAAD,EAAMa,MAAN,CAAL,CAAmBX,IAAnB,CAAwBC,QAAQ,IAAI;AACvC,WAAOA,QAAP;AACH,GAFM,EAEJD,IAFI,CAECG,MAAM,IAAI;AACd,WAAOA,MAAM,CAACG,OAAd;AACH,GAJM,EAIJF,KAJI,CAIEC,GAAG,IAAI;AACZ,WAAOA,GAAP;AACH,GANM,CAAP;AAOH;AAED,OAAO,SAASa,eAAT,CAAyBV,KAAzB,EAAgCC,MAAhC,EAAwCU,MAAxC,EAAgD;AACnD,QAAMrB,GAAG,GAAI,GAAEH,QAAS,IAAGC,UAAW,kBAAiBa,MAAO,EAA9D;AAEA,QAAME,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAEN;AAFV,KAFE;AAMXO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEG,MAAAA,MAAM,EAAED;AAAV,KAAf;AANK,GAAf;AASA,SAAOpB,KAAK,CAACD,GAAD,EAAMa,MAAN,CAAL,CAAmBX,IAAnB,CAAwBC,QAAQ,IAAI;AACvC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAEJF,IAFI,CAECG,MAAM,IAAI;AACd,WAAOA,MAAM,CAACG,OAAd;AACH,GAJM,EAIJF,KAJI,CAIEC,GAAG,IAAI;AACZgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,GAAZ;AACH,GANM,CAAP;AAOH;AAED,OAAO,SAASkB,UAAT,CAAoBf,KAApB,EAA2BgB,IAA3B,EAAiC;AACpC,QAAM1B,GAAG,GAAI,GAAEH,QAAS,IAAGC,UAAW,WAAtC;AAEA,QAAMe,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAELC,MAAAA,aAAa,EAAEN;AAFV,KAFE;AAMXO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,IAAf;AANK,GAAf;AASA,SAAOzB,KAAK,CAACD,GAAD,EAAMa,MAAN,CAAL,CAAmBX,IAAnB,CAAwBC,QAAQ,IAAI;AACvC,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAFM,EAGNF,IAHM,CAGDG,MAAM,IAAI,CAEf,CALM,CAAP;AAMH","sourcesContent":["import { basePath, apiVersion } from './config';\n\nexport function getMenuApi() {\n    const url = `${basePath}/${apiVersion}/get-menus`;\n\n    return fetch(url).then(response => {\n        return response.json();\n    })\n    .then(result => {\n        return result;\n    })\n    .catch(err => {\n        return err.message;\n    })\n}\n\nexport function updateMenuApi(token, menuId, data) {\n    const url = `${basePath}/${apiVersion}/update-menu/${menuId}`;\n\n    const params = {\n        method: 'PUT',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token\n        },\n        body: JSON.stringify(data)\n    };\n\n    return fetch(url, params).then(response => {\n        return response;\n    }).then(result => {\n        return result.message;\n    }).catch(err => {\n        return err;\n    })\n}\n\nexport function activateMenuApi(token, menuId, status) {\n    const url = `${basePath}/${apiVersion}/activate-menu/${menuId}`;\n\n    const params = {\n        method: 'PUT',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token\n        },\n        body: JSON.stringify({ active: status })\n    }\n\n    return fetch(url, params).then(response => {\n        return response.json();\n    }).then(result => {\n        return result.message;\n    }).catch(err => {\n        console.log(err)\n    })\n}\n\nexport function addMenuApi(token, menu) {\n    const url = `${basePath}/${apiVersion}/add-menu`;\n\n    const params = {\n        method: 'POST',\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: token\n        },\n        body: JSON.stringify(menu)\n    };\n\n    return fetch(url, params).then(response => {\n        return response.json();\n    })\n    .then(result => {\n        \n    })\n}"]},"metadata":{},"sourceType":"module"}