{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/Users/EditUserForm/EditUserForm.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Avatar, Form, Input, Select, Button, Row, Col, notification } from 'antd';\nimport { UserOutlined, MailOutlined, LockOutlined } from '@ant-design/icons';\nimport NoAvatar from '../../../../assets/img/png/no-avatar.png';\nimport { uploadAvatarApi, updateUserApi, getAvatarApi } from '../../../../api/user';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport { useDropzone } from 'react-dropzone';\nimport './EditUserForm.scss';\nexport default function EditUserForm(props) {\n  const {\n    user,\n    setIsVisibleModal,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  const [userData, setUserData] = useState({});\n  useEffect(() => {\n    setUserData({\n      name: user.name,\n      lastname: user.lastname,\n      email: user.email,\n      role: user.role,\n      avatar: user.avatar\n    });\n  }, [user]);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n  useEffect(() => {\n    if (avatar) {\n      setUserData({ ...userData,\n        avatar: avatar.file\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [avatar]);\n\n  const updateUser = () => {\n    const token = getAccessTokenApi();\n    let userUpdate = userData;\n\n    if (userUpdate.password || userUpdate.repeatPassword) {\n      if (userUpdate.password !== userUpdate.repeatPassword) {\n        notification['error']({\n          message: 'Las contraseÃ±as no coinciden.'\n        });\n        return;\n      }\n\n      console.log(user);\n    }\n\n    if (!userUpdate.name || !userUpdate.lastname || !userUpdate.email) {\n      notification['error']({\n        message: 'El nombre, apellido y email son obligatorios.'\n      });\n      return;\n    }\n\n    if (typeof userUpdate.avatar === \"object\") {\n      uploadAvatarApi(token, userUpdate.avatar, user._id).then(response => {\n        userUpdate.avatar = response.avatarName;\n        updateUserApi(token, userUpdate, user._id).then(result => {\n          notification[\"success\"]({\n            message: result.message\n          });\n          setIsVisibleModal(false);\n          setReloadUsers(true);\n        });\n      });\n    } else {\n      updateUserApi(token, userUpdate, user._id).then(result => {\n        notification[\"success\"]({\n          message: result.message\n        });\n        setIsVisibleModal(false);\n        setReloadUsers(true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-user-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(UploadAvatar, {\n    avatar: avatar,\n    setAvatar: setAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(EditForm, {\n    userData: userData,\n    setUserData: setUserData,\n    updateUser: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction UploadAvatar(props) {\n  const {\n    avatar,\n    setAvatar\n  } = props;\n  const [avatarUrl, setAvatarUrl] = useState(null);\n  useEffect(() => {\n    if (avatar) {\n      if (avatar.preview) {\n        setAvatarUrl(avatar.preview);\n      } else {\n        setAvatarUrl(avatar);\n      }\n    } else {\n      setAvatarUrl(null);\n    }\n  }, [avatar]);\n  const onDrop = useCallback(acceptedFiles => {\n    const file = acceptedFiles[0];\n    setAvatar({\n      file,\n      preview: URL.createObjectURL(file)\n    });\n  }, [setAvatar]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: \"iamge/jpeg, image/png\",\n    noKeyboard: true,\n    onDrop\n  });\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: \"upload-avatar\"\n  }, getRootProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), isDragActive ? /*#__PURE__*/React.createElement(Avatar, {\n    size: 150,\n    src: NoAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(Avatar, {\n    size: 150,\n    src: avatarUrl ? avatarUrl : NoAvatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }));\n}\n\nfunction EditForm(props) {\n  const {\n    userData,\n    setUserData,\n    updateUser\n  } = props;\n  const {\n    Option\n  } = Select;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"form-edit\",\n    onFinish: updateUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 37\n      }\n    }),\n    placeholder: \"Nombre\",\n    value: userData.name,\n    onChange: e => setUserData({ ...userData,\n      name: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 37\n      }\n    }),\n    placeholder: \"Apellidos\",\n    value: userData.lastname,\n    onChange: e => setUserData({ ...userData,\n      lastname: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(MailOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }),\n    placeholder: \"Correo electr\\xF3nico\",\n    value: userData.email,\n    onChange: e => setUserData({ ...userData,\n      email: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"Selecciona un rol\",\n    onChange: e => setUserData({ ...userData,\n      role: e\n    }),\n    value: userData.role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, \"Administrador\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }, \"Editor\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"reviewr\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, \"Revisor\"))))), /*#__PURE__*/React.createElement(Row, {\n    gutter: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    onChange: e => setUserData({ ...userData,\n      password: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }),\n    type: \"password\",\n    placeholder: \"Repetir contrase\\xF1a\",\n    onChange: e => setUserData({ ...userData,\n      repeatPassword: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, \"Actualizar usuario\")));\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/Users/EditUserForm/EditUserForm.js"],"names":["React","useState","useEffect","useCallback","Avatar","Form","Input","Select","Button","Row","Col","notification","UserOutlined","MailOutlined","LockOutlined","NoAvatar","uploadAvatarApi","updateUserApi","getAvatarApi","getAccessTokenApi","useDropzone","EditUserForm","props","user","setIsVisibleModal","setReloadUsers","avatar","setAvatar","userData","setUserData","name","lastname","email","role","then","response","file","updateUser","token","userUpdate","password","repeatPassword","message","console","log","_id","avatarName","result","UploadAvatar","avatarUrl","setAvatarUrl","preview","onDrop","acceptedFiles","URL","createObjectURL","getRootProps","getInputProps","isDragActive","accept","noKeyboard","EditForm","Option","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { Avatar, Form, Input, Select, Button, Row, Col, notification } from 'antd';\nimport { UserOutlined, MailOutlined, LockOutlined } from '@ant-design/icons';\nimport NoAvatar from '../../../../assets/img/png/no-avatar.png';\nimport { uploadAvatarApi, updateUserApi, getAvatarApi } from '../../../../api/user';\nimport { getAccessTokenApi } from '../../../../api/auth';\n\nimport { useDropzone } from 'react-dropzone'\n\nimport './EditUserForm.scss';\n\nexport default function EditUserForm(props) {\n    const { user, setIsVisibleModal, setReloadUsers } = props;\n    const [avatar, setAvatar] = useState(null);\n    const [userData, setUserData] = useState({});\n\n    useEffect(() => {\n        setUserData({\n            name: user.name,\n            lastname: user.lastname,\n            email: user.email,\n            role: user.role,\n            avatar: user.avatar\n        })\n    }, [user])\n\n    useEffect(() => {\n        if(user.avatar){\n            getAvatarApi(user.avatar).then(response => {\n                setAvatar(response);\n            })\n        } else {\n            setAvatar(null);\n        }\n    }, [user])\n\n    useEffect(() => {\n        if(avatar){\n            setUserData({ ...userData, avatar: avatar.file})\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [avatar]);\n\n    const updateUser = () => {\n        const token = getAccessTokenApi();\n        let userUpdate = userData;\n\n        if(userUpdate.password || userUpdate.repeatPassword){\n            if(userUpdate.password !== userUpdate.repeatPassword){\n                notification['error']({\n                    message: 'Las contraseÃ±as no coinciden.'\n                })\n                return;\n            }\n            console.log(user)\n        }\n\n        if(!userUpdate.name || !userUpdate.lastname || !userUpdate.email) {\n            notification['error']({\n                message: 'El nombre, apellido y email son obligatorios.'\n            })\n            return;\n        }\n\n        if(typeof userUpdate.avatar === \"object\" ){\n            uploadAvatarApi(token, userUpdate.avatar, user._id).then(response => {\n                userUpdate.avatar = response.avatarName;\n                updateUserApi(token, userUpdate, user._id).then(result => {\n                    notification[\"success\"]({\n                        message: result.message\n                    });\n                    setIsVisibleModal(false);\n                    setReloadUsers(true);\n                });\n            });\n        } else {\n            updateUserApi(token, userUpdate, user._id).then(result => {\n                notification[\"success\"]({\n                    message: result.message\n                });\n                setIsVisibleModal(false);\n                setReloadUsers(true);\n            });\n        }\n    }\n\n    return (\n        <div className=\"edit-user-form\">\n            <UploadAvatar avatar={avatar} setAvatar={setAvatar} />\n            <EditForm userData={userData} setUserData={setUserData} updateUser={updateUser} />\n        </div>\n    )\n}\n\nfunction UploadAvatar(props) {\n    const { avatar, setAvatar } = props;\n    const [avatarUrl, setAvatarUrl] = useState(null);\n\n    useEffect(() => {\n        if(avatar) {\n            if(avatar.preview){\n                setAvatarUrl(avatar.preview)\n            } else {\n                setAvatarUrl(avatar)\n            }\n        } else {\n            setAvatarUrl(null)\n        }\n    }, [avatar]);\n\n    const onDrop = useCallback(\n        acceptedFiles => {\n            const file = acceptedFiles[0];\n            setAvatar({ file, preview: URL.createObjectURL(file)})\n        }, [setAvatar]\n    );\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        accept: \"iamge/jpeg, image/png\",\n        noKeyboard: true,\n        onDrop\n    })\n\n    return (\n        <div className=\"upload-avatar\" {...getRootProps()}>\n            <input {...getInputProps()} />\n            {isDragActive ? (\n                <Avatar size={150} src={NoAvatar} />\n            ) : (\n                <Avatar size={150} src={avatarUrl ? avatarUrl : NoAvatar } />\n            )}\n        </div>\n    )\n}\n\nfunction EditForm(props) {\n    const { userData, setUserData, updateUser } = props;\n    const { Option } = Select\n\n    return (\n        <Form className=\"form-edit\" onFinish={updateUser}>\n            <Row gutter={24}>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<UserOutlined />}\n                            placeholder=\"Nombre\"\n                            value={userData.name}\n                            onChange={e => setUserData({ ...userData, name: e.target.value})}\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<UserOutlined />}\n                            placeholder=\"Apellidos\"\n                            value={userData.lastname}\n                            onChange={e => setUserData({ ...userData, lastname: e.target.value})}\n                        />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={24}>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<MailOutlined />}\n                            placeholder=\"Correo electrÃ³nico\"\n                            value={userData.email}\n                            onChange={e => setUserData({ ...userData, email: e.target.value})}\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item>\n                        <Select\n                            placeholder=\"Selecciona un rol\"\n                            onChange={e => setUserData({ ...userData, role: e})}\n                            value={userData.role}\n                        >\n                            <Option value=\"admin\">Administrador</Option>\n                            <Option value=\"editor\">Editor</Option>\n                            <Option value=\"reviewr\">Revisor</Option>\n                        </Select>\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Row gutter={24}>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<LockOutlined />}\n                            type=\"password\"\n                            placeholder=\"ContraseÃ±a\"\n                            onChange={e => setUserData({...userData, password: e.target.value})}\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span={12}>\n                    <Form.Item>\n                        <Input\n                            prefix={<LockOutlined />}\n                            type=\"password\"\n                            placeholder=\"Repetir contraseÃ±a\"\n                            onChange={e => setUserData({...userData, repeatPassword: e.target.value})}\n                        />\n                    </Form.Item>\n                </Col>\n            </Row>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\">\n                    Actualizar usuario\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}