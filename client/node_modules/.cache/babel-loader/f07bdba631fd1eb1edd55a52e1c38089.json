{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/Users/ListUsers/ListUsers.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, List, Avatar, Button } from 'antd';\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from '@ant-design/icons';\nimport NoAvatar from '../../../../assets/img/png/no-avatar.png';\nimport Modal from '../../../Modal';\nimport EditUserForm from '../EditUserForm';\nimport { getAvatarApi } from '../../../../api/user';\nimport './ListUsers.scss';\nexport default function ListUsers(props) {\n  const {\n    usersActive,\n    usersInactive\n  } = props;\n  const [viewUsersActives, setViewUsersActives] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users__switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    defaultChecked: true,\n    onChange: () => setViewUsersActives(!viewUsersActives),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, viewUsersActives ? \"Usuarios activos\" : \"Usuarios inactivos\")), viewUsersActives ? /*#__PURE__*/React.createElement(UsersActive, {\n    usersActive: usersActive,\n    setIsVisibleModal: setIsVisibleModal,\n    setModalTitle: setModalTitle,\n    setModalContent: setModalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(UsersInactive, {\n    usersInactive: usersInactive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, modalContent));\n}\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setIsVisibleModal,\n    setModalTitle,\n    setModalContent\n  } = props;\n\n  const editUser = user => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editar ${user.name ? user.name : \"...\"} ${user.lastname ? user.lastname : \"...\"}`);\n    setModalContent( /*#__PURE__*/React.createElement(EditUserForm, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => userActive(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction userActive(props) {\n  const {\n    user,\n    editUser\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => console.log('Desactivar usuario'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(StopOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: () => console.log('Eliminar usuario'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }),\n    title: `\n                    ${user.name ? user.name : '...'}\n                    ${user.lastname ? user.lastname : '...'}\n                `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive\n  } = props;\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/React.createElement(List.Item, {\n      actions: [/*#__PURE__*/React.createElement(Button, {\n        type: \"primary\",\n        onClick: () => console.log('Activar usuarios'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(CheckOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        type: \"danger\",\n        onClick: () => console.log('Eliminar usuario'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 29\n        }\n      }))],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, {\n        src: user.avatar ? user.avatar : NoAvatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 33\n        }\n      }),\n      title: `\n                            ${user.name ? user.name : '...'}\n                            ${user.lastname ? user.lastname : '...'}\n                        `,\n      description: user.email,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/Users/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","Switch","List","Avatar","Button","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","NoAvatar","Modal","EditUserForm","getAvatarApi","ListUsers","props","usersActive","usersInactive","viewUsersActives","setViewUsersActives","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","UsersActive","editUser","user","name","lastname","userActive","avatar","setAvatar","then","response","console","log","email","UsersInactive"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, List, Avatar, Button } from 'antd';\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from '@ant-design/icons';\nimport NoAvatar from '../../../../assets/img/png/no-avatar.png';\nimport Modal from '../../../Modal';\nimport EditUserForm from '../EditUserForm';\nimport { getAvatarApi } from '../../../../api/user';\n\nimport './ListUsers.scss';\n\nexport default function ListUsers(props) {\n    const { usersActive, usersInactive } = props;\n    const [viewUsersActives, setViewUsersActives] = useState(true);\n    const [isVisibleModal, setIsVisibleModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState(\"\");\n    const [modalContent, setModalContent] = useState(null);\n\n    return(\n        <div className=\"list-users\">\n            <div className=\"list-users__switch\">\n                <Switch\n                    defaultChecked\n                    onChange={() => setViewUsersActives(!viewUsersActives)}\n                />\n                <span>\n                    {viewUsersActives ? \"Usuarios activos\" : \"Usuarios inactivos\"}\n                </span>\n            </div>\n\n            {viewUsersActives ? (\n                <UsersActive \n                    usersActive={usersActive}\n                    setIsVisibleModal={setIsVisibleModal}\n                    setModalTitle={setModalTitle}\n                    setModalContent={setModalContent}\n                />\n             ) : (\n                <UsersInactive usersInactive={usersInactive} />\n             )}\n\n            <Modal\n                title={modalTitle}\n                isVisible={isVisibleModal}\n                setIsVisible={setIsVisibleModal}\n            >\n                {modalContent}\n            </Modal>\n        </div>\n    )\n}\n\nfunction UsersActive(props) {\n    const { usersActive, setIsVisibleModal, setModalTitle, setModalContent } = props;\n\n    const editUser = user => {\n        setIsVisibleModal(true);\n        setModalTitle(`Editar ${user.name ? user.name: \"...\"} ${user.lastname ? user.lastname : \"...\"}`);\n        setModalContent(<EditUserForm user={user} />);\n    }\n    return(\n        <List\n            className=\"users-active\"\n            itemLayout=\"horizontal\"\n            dataSource={usersActive}\n            renderItem={user => userActive()}\n        />    \n    )\n}\n\nfunction userActive(props) {\n    const { user, editUser } = props;\n    const [avatar, setAvatar] = useState(null);\n\n    useEffect(() => {\n        if(user.avatar){\n            getAvatarApi(user.avatar).then(response => {\n                setAvatar(response)\n            })\n        } else {\n            setAvatar(null)\n        }\n    }, [user])\n\n    return (\n        <List.Item\n            actions={[\n                <Button \n                    type=\"primary\"\n                    onClick={() => editUser(user)}\n                >\n                    <EditOutlined />\n                </Button>,\n                <Button\n                    type=\"danger\"\n                    onClick={() => console.log('Desactivar usuario')}\n                >\n                    <StopOutlined />\n                </Button>,\n                <Button\n                    type=\"danger\"\n                    onClick={() => console.log('Eliminar usuario')}\n                >\n                    <DeleteOutlined />\n                </Button>\n            ]}\n        >\n            <List.Item.Meta \n                avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\n                title={`\n                    ${user.name ? user.name : '...'}\n                    ${user.lastname ? user.lastname : '...'}\n                `}\n                description={user.email}\n            />\n        </List.Item>\n    )\n}\n\nfunction UsersInactive(props) {\n    const { usersInactive } = props;\n    return(\n        <List\n            className=\"users-active\"\n            itemLayout=\"horizontal\"\n            dataSource={usersInactive}\n            renderItem={user => (\n                <List.Item\n                    actions={[\n                        <Button \n                            type=\"primary\"\n                            onClick={() => console.log('Activar usuarios')}\n                        >\n                            <CheckOutlined />\n                        </Button>,\n                        <Button\n                            type=\"danger\"\n                            onClick={() => console.log('Eliminar usuario')}\n                        >\n                            <DeleteOutlined />\n                        </Button>\n                    ]}\n                >\n                    <List.Item.Meta \n                        avatar={<Avatar src={user.avatar ? user.avatar : NoAvatar} />}\n                        title={`\n                            ${user.name ? user.name : '...'}\n                            ${user.lastname ? user.lastname : '...'}\n                        `}\n                        description={user.email}\n                    />\n                </List.Item>\n            )}\n        />    \n    )\n}"]},"metadata":{},"sourceType":"module"}