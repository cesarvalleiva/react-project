{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/MenuWeb/EditMenuWebForm/EditMenuWebForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport { FontSizeOutlined, LinkOutlined } from '@ant-design/icons';\nimport { updateMenuApi } from '../../../../api/menu';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport './EditMenuWebForm.scss';\nexport default function EditMenuForm(props) {\n  const {\n    setIsVisibleModal,\n    setReloadMenuWeb,\n    menu\n  } = props;\n  const [menuWebData, setMenuWebData] = useState(menu);\n  useEffect(() => {\n    setMenuWebData(menu);\n  }, [menu]);\n\n  const editMenu = () => {\n    if (!menuWebData.title || !menuWebData.url) {\n      notification['error']({\n        message: 'Todos los compos son obligatorios.'\n      });\n    } else {\n      const accessToken = getAccessTokenApi();\n      updateMenuApi(accessToken, menuWebData._id, menuWebData).then(response => {\n        notification['success']({\n          message: response\n        });\n      }).catch(() => {\n        notification['error']({\n          mess\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-menu-web-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EditForm, {\n    menuWebData: menuWebData,\n    setMenuWebData: setMenuWebData,\n    editMenu: editMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction EditForm(props) {\n  const {\n    menuWebData,\n    setMenuWebData,\n    editMenu\n  } = props;\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"form-edit\",\n    onFinish: editMenu,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(FontSizeOutlined, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }),\n    placeholder: \"Titulo\",\n    value: menuWebData.title,\n    onChange: e => setMenuWebData({ ...menuWebData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LinkOutlined, {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }),\n    placeholder: \"URL\",\n    value: menuWebData.url,\n    onChange: e => setMenuWebData({ ...menuWebData,\n      url: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"btn-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Actualizar Men\\xFA\")));\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/MenuWeb/EditMenuWebForm/EditMenuWebForm.js"],"names":["React","useState","useEffect","Form","Input","Button","notification","FontSizeOutlined","LinkOutlined","updateMenuApi","getAccessTokenApi","EditMenuForm","props","setIsVisibleModal","setReloadMenuWeb","menu","menuWebData","setMenuWebData","editMenu","title","url","message","accessToken","_id","then","response","catch","mess","EditForm","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, notification } from 'antd';\nimport { FontSizeOutlined, LinkOutlined } from '@ant-design/icons';\nimport { updateMenuApi } from '../../../../api/menu';\nimport { getAccessTokenApi } from '../../../../api/auth';\n\nimport './EditMenuWebForm.scss';\n\nexport default function EditMenuForm(props) {\n    const { setIsVisibleModal, setReloadMenuWeb, menu } = props;\n    const[menuWebData, setMenuWebData] = useState(menu);\n\n    useEffect(() => {\n        setMenuWebData(menu);\n    }, [menu]);\n\n    const editMenu = () => {\n        if(!menuWebData.title || !menuWebData.url) {\n            notification['error']({\n                message: 'Todos los compos son obligatorios.'\n            })\n        } else {\n            const accessToken = getAccessTokenApi();\n\n            updateMenuApi(accessToken, menuWebData._id, menuWebData)\n            .then(response => {\n                notification['success']({\n                    message: response\n                })\n            })\n            .catch(() => {\n                notification['error']({\n                    mess\n                })\n            })\n        }\n    }\n\n    return (\n        <div className=\"edit-menu-web-form\">\n            <EditForm \n                menuWebData={menuWebData}\n                setMenuWebData={setMenuWebData}\n                editMenu={editMenu}\n            />\n        </div>\n    )\n}\n\nfunction EditForm(props) {\n    const { menuWebData, setMenuWebData, editMenu } = props;\n\n    return (\n        <Form className=\"form-edit\" onFinish={editMenu}>\n            <Form.Item>\n                <Input\n                    prefix={<FontSizeOutlined className=\"icon\" />}\n                    placeholder=\"Titulo\"\n                    value={menuWebData.title}\n                    onChange={e => setMenuWebData({ ...menuWebData, title: e.target.value })}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input\n                    prefix={<LinkOutlined className=\"icon\" />}\n                    placeholder=\"URL\"\n                    value={menuWebData.url}\n                    onChange={e => setMenuWebData({ ...menuWebData, url: e.target.value })}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"btn-submit\">\n                    Actualizar Men√∫\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}