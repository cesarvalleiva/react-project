{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/Users/ListUsers/ListUsers.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, List, Avatar, Button, Modal as ModalAntd, notification } from 'antd';\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from '@ant-design/icons';\nimport NoAvatar from '../../../../assets/img/png/no-avatar.png';\nimport Modal from '../../../Modal';\nimport EditUserForm from '../EditUserForm';\nimport { getAvatarApi, activateUserApi, deleteUserApi } from '../../../../api/user';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport './ListUsers.scss';\nconst {\n  confirm\n} = ModalAntd;\nexport default function ListUsers(props) {\n  const {\n    usersActive,\n    usersInactive,\n    setReloadUsers\n  } = props;\n  const [viewUsersActives, setViewUsersActives] = useState(true);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(\"\");\n  const [modalContent, setModalContent] = useState(null);\n\n  const addUserModal = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list-users__header-switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    defaultChecked: true,\n    onChange: () => setViewUsersActives(!viewUsersActives),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, viewUsersActives ? \"Usuarios activos\" : \"Usuarios inactivos\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: addUserModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Nuevo Usuario\")), viewUsersActives ? /*#__PURE__*/React.createElement(UsersActive, {\n    usersActive: usersActive,\n    setIsVisibleModal: setIsVisibleModal,\n    setModalTitle: setModalTitle,\n    setModalContent: setModalContent,\n    setReloadUsers: setReloadUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(UsersInactive, {\n    usersInactive: usersInactive,\n    setReloadUsers: setReloadUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, modalContent));\n}\n\nfunction UsersActive(props) {\n  const {\n    usersActive,\n    setIsVisibleModal,\n    setModalTitle,\n    setModalContent,\n    setReloadUsers\n  } = props;\n\n  const editUser = user => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editar ${user.name ? user.name : \"...\"} ${user.lastname ? user.lastname : \"...\"}`);\n    setModalContent( /*#__PURE__*/React.createElement(EditUserForm, {\n      user: user,\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersActive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserActive, {\n      user: user,\n      editUser: editUser,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction UserActive(props) {\n  const {\n    user,\n    editUser,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const desactivateUser = () => {\n    const accessToken = getAccessTokenApi();\n    activateUserApi(accessToken, user._id, false).then(response => {\n      notification['success']({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification['error']({\n        message: err\n      });\n    });\n  };\n\n  const showDeleteConfirm = () => {\n    const accessToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando usuario\",\n      content: `Está seguro que quiere eliminar a ${user.email}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteUserApi(accessToken, user._id).then(response => {\n          notification['success']({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification['error']({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editUser(user),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: desactivateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(StopOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 25\n      }\n    }),\n    title: `\n                    ${user.name ? user.name : '...'}\n                    ${user.lastname ? user.lastname : '...'}\n                `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction UsersInactive(props) {\n  const {\n    usersInactive,\n    setReloadUsers\n  } = props;\n  return /*#__PURE__*/React.createElement(List, {\n    className: \"users-active\",\n    itemLayout: \"horizontal\",\n    dataSource: usersInactive,\n    renderItem: user => /*#__PURE__*/React.createElement(UserInactive, {\n      user: user,\n      setReloadUsers: setReloadUsers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 33\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  });\n}\n\nfunction UserInactive(props) {\n  const {\n    user,\n    setReloadUsers\n  } = props;\n  const [avatar, setAvatar] = useState(null);\n  useEffect(() => {\n    if (user.avatar) {\n      getAvatarApi(user.avatar).then(response => {\n        setAvatar(response);\n      });\n    } else {\n      setAvatar(null);\n    }\n  }, [user]);\n\n  const activateUser = () => {\n    const accessToken = getAccessTokenApi();\n    activateUserApi(accessToken, user._id, true).then(response => {\n      notification['success']({\n        message: response\n      });\n      setReloadUsers(true);\n    }).catch(err => {\n      notification['error']({\n        message: err\n      });\n    });\n  };\n\n  const showDeleteConfirm = () => {\n    const accessToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando usuario\",\n      content: `Está seguro que quiere eliminar a ${user.email}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteUserApi(accessToken, user._id).then(response => {\n          notification['success']({\n            message: response\n          });\n          setReloadUsers(true);\n        }).catch(err => {\n          notification['error']({\n            message: err\n          });\n        });\n      }\n\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: activateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CheckOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: showDeleteConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 21\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      src: avatar ? avatar : NoAvatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }),\n    title: `\n                    ${user.name ? user.name : '...'}\n                    ${user.lastname ? user.lastname : '...'}\n                `,\n    description: user.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/Users/ListUsers/ListUsers.js"],"names":["React","useState","useEffect","Switch","List","Avatar","Button","Modal","ModalAntd","notification","EditOutlined","StopOutlined","DeleteOutlined","CheckOutlined","NoAvatar","EditUserForm","getAvatarApi","activateUserApi","deleteUserApi","getAccessTokenApi","confirm","ListUsers","props","usersActive","usersInactive","setReloadUsers","viewUsersActives","setViewUsersActives","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","addUserModal","UsersActive","editUser","user","name","lastname","UserActive","avatar","setAvatar","then","response","desactivateUser","accessToken","_id","message","catch","err","showDeleteConfirm","title","content","email","okText","okType","cancelText","onOk","UsersInactive","UserInactive","activateUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, List, Avatar, Button, Modal as ModalAntd, notification } from 'antd';\nimport { EditOutlined, StopOutlined, DeleteOutlined, CheckOutlined } from '@ant-design/icons';\nimport NoAvatar from '../../../../assets/img/png/no-avatar.png';\nimport Modal from '../../../Modal';\nimport EditUserForm from '../EditUserForm';\nimport { getAvatarApi, activateUserApi, deleteUserApi } from '../../../../api/user';\nimport { getAccessTokenApi } from '../../../../api/auth';\n\nimport './ListUsers.scss';\n\nconst { confirm } = ModalAntd; \n\nexport default function ListUsers(props) {\n    const { usersActive, usersInactive, setReloadUsers } = props;\n    const [viewUsersActives, setViewUsersActives] = useState(true);\n    const [isVisibleModal, setIsVisibleModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState(\"\");\n    const [modalContent, setModalContent] = useState(null);\n\n    const addUserModal = () => {\n        \n    }\n\n    return(\n        <div className=\"list-users\">\n            <div className=\"list-users__header\">\n                <div className=\"list-users__header-switch\">\n                    <Switch\n                        defaultChecked\n                        onChange={() => setViewUsersActives(!viewUsersActives)}\n                    />\n                    <span>\n                        {viewUsersActives ? \"Usuarios activos\" : \"Usuarios inactivos\"}\n                    </span>\n                </div>\n                <Button type=\"primary\" onClick={addUserModal}>\n                    Nuevo Usuario\n                </Button>\n            </div>\n\n            {viewUsersActives ? (\n                <UsersActive \n                    usersActive={usersActive}\n                    setIsVisibleModal={setIsVisibleModal}\n                    setModalTitle={setModalTitle}\n                    setModalContent={setModalContent}\n                    setReloadUsers={setReloadUsers}\n                />\n             ) : (\n                <UsersInactive usersInactive={usersInactive} setReloadUsers={setReloadUsers} />\n             )}\n\n            <Modal\n                title={modalTitle}\n                isVisible={isVisibleModal}\n                setIsVisible={setIsVisibleModal}\n            >\n                {modalContent}\n            </Modal>\n        </div>\n    )\n}\n\nfunction UsersActive(props) {\n    const { usersActive, setIsVisibleModal, setModalTitle, setModalContent, setReloadUsers } = props;\n\n    const editUser = user => {\n        setIsVisibleModal(true);\n        setModalTitle(`Editar ${user.name ? user.name: \"...\"} ${user.lastname ? user.lastname : \"...\"}`);\n        setModalContent(<EditUserForm user={user} setIsVisibleModal={setIsVisibleModal} setReloadUsers={setReloadUsers} />);\n    }\n    return(\n        <List\n            className=\"users-active\"\n            itemLayout=\"horizontal\"\n            dataSource={usersActive}\n            renderItem={user => <UserActive user={user} editUser={editUser} setReloadUsers={setReloadUsers} />}\n        />    \n    )\n}\n\nfunction UserActive(props) {\n    const { user, editUser, setReloadUsers } = props;\n    const [avatar, setAvatar] = useState(null);\n\n    useEffect(() => {\n        if(user.avatar){\n            getAvatarApi(user.avatar).then(response => {\n                setAvatar(response)\n            })\n        } else {\n            setAvatar(null)\n        }\n    }, [user]);\n\n    const desactivateUser = () => {\n        const accessToken = getAccessTokenApi();\n\n        activateUserApi(accessToken, user._id, false)\n        .then(response => {\n            notification['success']({\n                message: response\n            });\n            setReloadUsers(true);\n        })\n        .catch(err => {\n            notification['error']({\n                message: err\n            });\n        });\n    }\n\n    const showDeleteConfirm = () => {\n        const accessToken = getAccessTokenApi();\n\n        confirm({\n            title: \"Eliminando usuario\",\n            content: `Está seguro que quiere eliminar a ${user.email}?`,\n            okText: \"Eliminar\",\n            okType: \"danger\",\n            cancelText: \"Cancelar\",\n            onOk() {\n                deleteUserApi(accessToken, user._id)\n                .then(response => {\n                    notification['success']({\n                        message: response\n                    });\n                    setReloadUsers(true);\n                })\n                .catch(err => {\n                    notification['error']({\n                        message: err\n                    });\n                })\n            }\n        })\n    }\n\n    return (\n        <List.Item\n            actions={[\n                <Button \n                    type=\"primary\"\n                    onClick={() => editUser(user)}\n                >\n                    <EditOutlined />\n                </Button>,\n                <Button\n                    type=\"danger\"\n                    onClick={desactivateUser}\n                >\n                    <StopOutlined />\n                </Button>,\n                <Button\n                    type=\"danger\"\n                    onClick={showDeleteConfirm}\n                >\n                    <DeleteOutlined />\n                </Button>\n            ]}\n        >\n            <List.Item.Meta \n                avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\n                title={`\n                    ${user.name ? user.name : '...'}\n                    ${user.lastname ? user.lastname : '...'}\n                `}\n                description={user.email}\n            />\n        </List.Item>\n    )\n}\n\nfunction UsersInactive(props) {\n    const { usersInactive, setReloadUsers } = props;\n    return(\n        <List\n            className=\"users-active\"\n            itemLayout=\"horizontal\"\n            dataSource={usersInactive}\n            renderItem={user => <UserInactive user={user} setReloadUsers={setReloadUsers} />}\n        />    \n    )\n}\n\nfunction UserInactive(props) {\n    const { user, setReloadUsers } = props;\n    const [avatar, setAvatar] = useState(null);\n\n    useEffect(() => {\n        if(user.avatar){\n            getAvatarApi(user.avatar).then(response => {\n                setAvatar(response)\n            })\n        } else {\n            setAvatar(null)\n        }\n    }, [user]);\n\n    const activateUser = () => {\n        const accessToken = getAccessTokenApi();\n\n        activateUserApi(accessToken, user._id, true)\n        .then(response => {\n            notification['success']({\n                message: response\n            });\n            setReloadUsers(true);\n        })\n        .catch(err => {\n            notification['error']({\n                message: err\n            });\n        });\n    }\n\n    const showDeleteConfirm = () => {\n        const accessToken = getAccessTokenApi();\n\n        confirm({\n            title: \"Eliminando usuario\",\n            content: `Está seguro que quiere eliminar a ${user.email}?`,\n            okText: \"Eliminar\",\n            okType: \"danger\",\n            cancelText: \"Cancelar\",\n            onOk() {\n                deleteUserApi(accessToken, user._id)\n                .then(response => {\n                    notification['success']({\n                        message: response\n                    });\n                    setReloadUsers(true);\n                })\n                .catch(err => {\n                    notification['error']({\n                        message: err\n                    });\n                })\n            }\n        })\n    }\n\n    return (\n        <List.Item\n            actions={[\n                <Button \n                    type=\"primary\"\n                    onClick={activateUser}\n                >\n                    <CheckOutlined />\n                </Button>,\n                <Button\n                    type=\"danger\"\n                    onClick={showDeleteConfirm}\n                >\n                    <DeleteOutlined />\n                </Button>\n            ]}\n        >\n            <List.Item.Meta \n                avatar={<Avatar src={avatar ? avatar : NoAvatar} />}\n                title={`\n                    ${user.name ? user.name : '...'}\n                    ${user.lastname ? user.lastname : '...'}\n                `}\n                description={user.email}\n            />\n        </List.Item>\n    )\n}"]},"metadata":{},"sourceType":"module"}