{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/RegisterForm/RegisterForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { emailValidation, minLengthValidation } from '../../../utils/formValidation';\nimport './RegisterForm.scss';\nexport default function RegisterForm() {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n    privacyPolicy: false\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    privacyPolicy: false\n  });\n\n  const changeForm = e => {\n    if (e.target.name === \"privacyPolicy\") {\n      setInputs({ ...inputs,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      setInputs({ ...inputs,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const inputValidation = e => {\n    const {\n      type,\n      name\n    } = e.target;\n\n    if (type === \"email\") {\n      setFormValid({ ...formValid,\n        [name]: emailValidation(e.target)\n      });\n    }\n\n    if (type === \"password\") {\n      setFormValid({ ...formValid,\n        [name]: minLengthValidation(e.target, 6)\n      });\n    }\n\n    if (type === \"checkbox\") {\n      setFormValid({ ...formValid,\n        [name]: e.target.checked\n      });\n    }\n  };\n\n  const register = () => {\n    const {\n      email,\n      password,\n      repeatPassword,\n      privacyPolicy\n    } = formValid;\n    const emailVal = inputs.email;\n    const passwordVal = inputs.password;\n    const repeatPasswordVal = inputs.repeatPassword;\n    const privacyPolicyVal = inputs.privacyPolicy;\n\n    if (!emailVal || !passwordVal || !repeatPasswordVal || !privacyPolicyVal) {\n      notification['error']({\n        message: 'Todos los campos son obligatorios.'\n      });\n    } else {\n      if (passwordVal !== repeatPasswordVal) {\n        notification['error']({\n          message: 'Las contrase√±as no coinciden.'\n        });\n      } else {}\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"register-form\",\n    onFinish: register,\n    onChange: changeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }),\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Correo electr\\xF3nico\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }\n    }),\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }),\n    type: \"password\",\n    name: \"repeatPassword\",\n    placeholder: \"Repetir Contrase\\xF1a\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.repeatPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"privacyPolicy\",\n    onChange: inputValidation,\n    checked: inputs.privacyPolicy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"He le\\xEDdo y acepto la pol\\xEDtica de privacidad\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    className: \"register-form__button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, \"Crear cuenta\")));\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","UserOutlined","LockOutlined","emailValidation","minLengthValidation","RegisterForm","inputs","setInputs","email","password","repeatPassword","privacyPolicy","formValid","setFormValid","changeForm","e","target","name","checked","value","inputValidation","type","register","emailVal","passwordVal","repeatPasswordVal","privacyPolicyVal","message","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { emailValidation, minLengthValidation } from '../../../utils/formValidation'\n\nimport './RegisterForm.scss';\n\nexport default function RegisterForm() {\n    const [inputs, setInputs] = useState({\n        email: \"\",\n        password: \"\",\n        repeatPassword: \"\",\n        privacyPolicy: false\n    });\n\n    const [formValid, setFormValid] = useState({\n        email: false,\n        password: false,\n        repeatPassword: false,\n        privacyPolicy: false\n    });\n\n    const changeForm = e => {\n        if(e.target.name === \"privacyPolicy\"){\n            setInputs({\n                ...inputs,\n                [e.target.name]: e.target.checked\n            })\n        } else {\n            setInputs({\n                ...inputs,\n                [e.target.name]: e.target.value\n            })\n        }\n    };\n\n    const inputValidation = e => {\n        const {type, name} = e.target;\n\n        if(type === \"email\") {\n            setFormValid({\n                ...formValid,\n                [name]: emailValidation(e.target)\n            })\n        }\n\n        if(type === \"password\") {\n            setFormValid({\n                ...formValid,\n                [name]: minLengthValidation(e.target, 6)\n            })\n        }\n\n        if(type === \"checkbox\") {\n            setFormValid({\n                ...formValid,\n                [name]: e.target.checked\n            })\n        }\n    }\n\n    const register = () => {\n        const { email, password, repeatPassword, privacyPolicy } = formValid;\n\n        const emailVal = inputs.email;\n        const passwordVal = inputs.password;\n        const repeatPasswordVal = inputs.repeatPassword;\n        const privacyPolicyVal = inputs.privacyPolicy;\n\n        if(!emailVal || !passwordVal || !repeatPasswordVal || !privacyPolicyVal) {\n            notification['error']({\n                message: 'Todos los campos son obligatorios.'\n            })\n        } else {\n            if (passwordVal !== repeatPasswordVal) {\n                    notification['error']({\n                    message: 'Las contrase√±as no coinciden.'\n                })\n            } else {\n                \n            }\n        }\n    }\n\n    return(\n        <Form className=\"register-form\" onFinish={register} onChange={changeForm}>\n            <Form.Item>\n                <Input\n                    prefix={<UserOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Correo electr√≥nico\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.email}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input\n                    prefix={<LockOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Contrase√±a\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.password}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input\n                    prefix={<LockOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"password\"\n                    name=\"repeatPassword\"\n                    placeholder=\"Repetir Contrase√±a\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.repeatPassword}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Checkbox\n                    name=\"privacyPolicy\"\n                    onChange={inputValidation}\n                    checked={inputs.privacyPolicy}\n                >\n                    He le√≠do y acepto la pol√≠tica de privacidad\n                </Checkbox>\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" className=\"register-form__button\">\n                    Crear cuenta\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}