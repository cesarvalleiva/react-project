{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/MenuWeb/MenuWebList/MenuWebList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Switch, List, Button, Modal as ModalAntd, notification } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport Modal from '../../../Modal';\nimport DragSortableList from 'react-drag-sortable';\nimport { updateMenuApi, activateMenuApi, deleteMenuApi } from '../../../../api/menu';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport AddMenuWebForm from '../AddMenuWebForm';\nimport EditMenuWebForm from '../EditMenuWebForm';\nimport './MenuWebList.scss';\nconst {\n  confirm\n} = ModalAntd;\nexport default function MenuWebList(props) {\n  const {\n    menu,\n    setReloadMenuWeb\n  } = props;\n  const [listItems, setListItems] = useState([]);\n  const [isVisibleModal, setIsVisibleModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState('');\n  const [modalContent, setModalContent] = useState(null);\n  useEffect(() => {\n    const listItemsArray = [];\n    menu.forEach(item => {\n      listItemsArray.push({\n        content: /*#__PURE__*/React.createElement(MenuItem, {\n          item: item,\n          activateMenu: activateMenu,\n          editMenuWebModal: editMenuWebModal,\n          deleteMenu: deleteMenu,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }\n        })\n      });\n    });\n    setListItems(listItemsArray); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [menu]);\n\n  const activateMenu = (menu, status) => {\n    const accessToken = getAccessTokenApi();\n    activateMenuApi(accessToken, menu._id, status).then(response => {\n      notification['success']({\n        message: response\n      });\n    });\n  };\n\n  const onSort = (sortedList, dropEvent) => {\n    const accessToken = getAccessTokenApi();\n    sortedList.forEach(item => {\n      const {\n        _id\n      } = item.content.props.item;\n      const order = item.rank;\n      updateMenuApi(accessToken, _id, {\n        order\n      });\n    });\n  };\n\n  const addMenuWebModal = () => {\n    setIsVisibleModal(true);\n    setModalTitle('Creando nuevo menú');\n    setModalContent( /*#__PURE__*/React.createElement(AddMenuWebForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadMenuWeb: setReloadMenuWeb,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  const deleteMenu = menu => {\n    const accessToken = getAccessTokenApi();\n    confirm({\n      title: \"Eliminando menu\",\n      content: `Estas seguro que quieres eliminar el menu ${menu.title}?`,\n      okText: \"Eliminar\",\n      okType: \"danger\",\n      cancelText: \"Cancelar\",\n\n      onOk() {\n        deleteMenuApi(accessToken, menu._id).then(response => {\n          notification['success']({\n            message: response\n          });\n          setReloadMenuWeb(true);\n        }).catch(() => {\n          notification['error']({\n            message: 'Error del servidor, intentelo más tarde.'\n          });\n        });\n      }\n\n    });\n  };\n\n  const editMenuWebModal = menu => {\n    setIsVisibleModal(true);\n    setModalTitle(`Editando menu: ${menu.title}`);\n    setModalContent( /*#__PURE__*/React.createElement(EditMenuWebForm, {\n      setIsVisibleModal: setIsVisibleModal,\n      setReloadMenuWeb: setReloadMenuWeb,\n      menu: menu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-web-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-web-list__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: addMenuWebModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, \"Nuevo Menu\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"menu-web-list__items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DragSortableList, {\n    items: listItems,\n    onSort: onSort,\n    type: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    title: modalTitle,\n    isVisible: isVisibleModal,\n    setIsVisible: setIsVisibleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, modalContent));\n}\n\nfunction MenuItem(props) {\n  const {\n    item,\n    activateMenu,\n    editMenuWebModal,\n    deleteMenu\n  } = props;\n  return /*#__PURE__*/React.createElement(List.Item, {\n    actions: [/*#__PURE__*/React.createElement(Switch, {\n      defaultChecked: item.active,\n      onChange: e => activateMenu(item, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: () => editMenuWebModal(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      type: \"danger\",\n      onClick: e => deleteMenu(item),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List.Item.Meta, {\n    title: item.title,\n    description: item.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/MenuWeb/MenuWebList/MenuWebList.js"],"names":["React","useState","useEffect","Switch","List","Button","Modal","ModalAntd","notification","EditOutlined","DeleteOutlined","DragSortableList","updateMenuApi","activateMenuApi","deleteMenuApi","getAccessTokenApi","AddMenuWebForm","EditMenuWebForm","confirm","MenuWebList","props","menu","setReloadMenuWeb","listItems","setListItems","isVisibleModal","setIsVisibleModal","modalTitle","setModalTitle","modalContent","setModalContent","listItemsArray","forEach","item","push","content","activateMenu","editMenuWebModal","deleteMenu","status","accessToken","_id","then","response","message","onSort","sortedList","dropEvent","order","rank","addMenuWebModal","title","okText","okType","cancelText","onOk","catch","MenuItem","active","e","url"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Switch, List, Button, Modal as ModalAntd, notification } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport Modal from '../../../Modal';\nimport DragSortableList from 'react-drag-sortable';\nimport { updateMenuApi, activateMenuApi, deleteMenuApi } from '../../../../api/menu';\nimport { getAccessTokenApi } from '../../../../api/auth';\nimport AddMenuWebForm from '../AddMenuWebForm';\nimport EditMenuWebForm from '../EditMenuWebForm';\n\nimport './MenuWebList.scss';\n\nconst { confirm } = ModalAntd;\n\nexport default function MenuWebList(props) {\n    const { menu, setReloadMenuWeb } = props;\n    const [listItems, setListItems] = useState([])\n    const [isVisibleModal, setIsVisibleModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState('');\n    const [modalContent, setModalContent] = useState(null);\n\n    useEffect(() => {\n        const listItemsArray = [];\n\n        menu.forEach(item => {\n            listItemsArray.push({\n                content: (\n                    <MenuItem \n                        item={item}\n                        activateMenu={activateMenu}\n                        editMenuWebModal={editMenuWebModal} \n                        deleteMenu={deleteMenu}\n                    />\n                )\n            });\n        });\n        setListItems(listItemsArray);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [menu]);\n\n    const activateMenu = (menu, status) => {\n        const accessToken = getAccessTokenApi();\n        activateMenuApi(accessToken, menu._id, status).then(response => {\n            notification['success']({\n                message: response\n            });\n        })\n    };\n\n    const onSort = (sortedList, dropEvent) => {\n        const accessToken = getAccessTokenApi();\n\n        sortedList.forEach(item => {\n            const { _id } = item.content.props.item;\n            const order = item.rank;\n            updateMenuApi(accessToken, _id, { order });\n        })\n    };\n\n    const addMenuWebModal = () => {\n        setIsVisibleModal(true);\n        setModalTitle('Creando nuevo menú');\n        setModalContent(\n        <AddMenuWebForm\n            setIsVisibleModal={setIsVisibleModal}\n            setReloadMenuWeb={setReloadMenuWeb}\n        />)\n    };\n\n    const deleteMenu = menu => {\n        const accessToken = getAccessTokenApi();\n\n        confirm({\n            title: \"Eliminando menu\",\n            content: `Estas seguro que quieres eliminar el menu ${menu.title}?`,\n            okText: \"Eliminar\",\n            okType: \"danger\",\n            cancelText: \"Cancelar\",\n            onOk() {\n                deleteMenuApi(accessToken, menu._id).then(response => {\n                    notification['success']({\n                        message: response\n                    });\n                    setReloadMenuWeb(true);\n                })\n                .catch(() => {\n                    notification['error']({\n                        message: 'Error del servidor, intentelo más tarde.'\n                    });\n                })\n            }\n        })\n    }\n\n    const editMenuWebModal = menu => {\n        setIsVisibleModal(true);\n        setModalTitle(`Editando menu: ${menu.title}`);\n        setModalContent(\n            <EditMenuWebForm\n                setIsVisibleModal={setIsVisibleModal}\n                setReloadMenuWeb={setReloadMenuWeb}\n                menu={menu}\n            />\n        )\n    };\n\n    return (\n        <div className=\"menu-web-list\">\n            <div className=\"menu-web-list__header\">\n                <Button type=\"primary\" onClick={addMenuWebModal}>\n                    Nuevo Menu\n                </Button>\n            </div>\n            <div className=\"menu-web-list__items\">\n                <DragSortableList items={listItems} onSort={onSort} type=\"vertical\" />\n            </div>\n            <Modal\n                title={modalTitle}\n                isVisible={isVisibleModal}\n                setIsVisible={setIsVisibleModal}\n            >\n                {modalContent}\n            </Modal>\n        </div>\n    )\n}\n\nfunction MenuItem(props) {\n    const { item, activateMenu, editMenuWebModal, deleteMenu } = props;\n\n    return (\n        <List.Item\n            actions={[\n                <Switch defaultChecked={item.active} onChange={e => activateMenu(item, e)} />,\n                <Button type=\"primary\" onClick={() => editMenuWebModal(item)}>\n                    <EditOutlined />\n                </Button>,\n                <Button type=\"danger\" onClick={e => deleteMenu(item)}>\n                    <DeleteOutlined />\n                </Button>\n            ]}\n        >\n            <List.Item.Meta title={item.title} description={item.url} />\n        </List.Item>\n    )\n}"]},"metadata":{},"sourceType":"module"}