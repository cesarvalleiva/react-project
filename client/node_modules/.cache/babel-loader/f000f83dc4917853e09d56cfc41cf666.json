{"ast":null,"code":"import { basePath, apiVersion } from './config';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../utils/constants';\nimport jwtDecode from 'jwt-decode';\nexport function getAccessToken() {\n  const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n  if (!accessToken || accessToken === 'null') {\n    return null;\n  }\n\n  return willExpireToken(accessToken) ? null : accessToken;\n}\nexport function getRefreshToken() {\n  const refreshToken = localStorage.getItem(REFRESH_TOKEN);\n\n  if (!accessToken || accessToken === 'null') {\n    return null;\n  }\n\n  return willExpireToken(accessToken) ? null : accessToken;\n}\n\nfunction willExpireToken(token) {\n  const seconds = 60;\n  const metaToken = jwtDecode(token);\n  const {\n    exp\n  } = metaToken;\n  const now = (Date.now() + seconds) / 1000;\n  return now > exp;\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/api/auth.js"],"names":["basePath","apiVersion","ACCESS_TOKEN","REFRESH_TOKEN","jwtDecode","getAccessToken","accessToken","localStorage","getItem","willExpireToken","getRefreshToken","refreshToken","token","seconds","metaToken","exp","now","Date"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,UAArC;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC7B,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBN,YAArB,CAApB;;AAEA,MAAG,CAACI,WAAD,IAAgBA,WAAW,KAAK,MAAnC,EAA2C;AACvC,WAAO,IAAP;AACH;;AAED,SAAOG,eAAe,CAACH,WAAD,CAAf,GAA+B,IAA/B,GAAsCA,WAA7C;AACH;AAED,OAAO,SAASI,eAAT,GAA2B;AAC9B,QAAMC,YAAY,GAAGJ,YAAY,CAACC,OAAb,CAAqBL,aAArB,CAArB;;AAEA,MAAG,CAACG,WAAD,IAAgBA,WAAW,KAAK,MAAnC,EAA2C;AACvC,WAAO,IAAP;AACH;;AAED,SAAOG,eAAe,CAACH,WAAD,CAAf,GAA+B,IAA/B,GAAsCA,WAA7C;AACH;;AAED,SAASG,eAAT,CAAyBG,KAAzB,EAAgC;AAC5B,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,SAAS,GAAGV,SAAS,CAACQ,KAAD,CAA3B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAUD,SAAhB;AACA,QAAME,GAAG,GAAG,CAACC,IAAI,CAACD,GAAL,KAAaH,OAAd,IAAyB,IAArC;AAEA,SAAOG,GAAG,GAAGD,GAAb;AACH","sourcesContent":["import { basePath, apiVersion } from './config';\nimport { ACCESS_TOKEN, REFRESH_TOKEN } from '../utils/constants';\nimport jwtDecode from 'jwt-decode';\n\nexport function getAccessToken() {\n    const accessToken = localStorage.getItem(ACCESS_TOKEN);\n\n    if(!accessToken || accessToken === 'null') {\n        return null;\n    }\n\n    return willExpireToken(accessToken) ? null : accessToken;\n}\n\nexport function getRefreshToken() {\n    const refreshToken = localStorage.getItem(REFRESH_TOKEN);\n\n    if(!accessToken || accessToken === 'null') {\n        return null;\n    }\n\n    return willExpireToken(accessToken) ? null : accessToken;\n}\n\nfunction willExpireToken(token) {\n    const seconds = 60;\n    const metaToken = jwtDecode(token);\n    const { exp } = metaToken;\n    const now = (Date.now() + seconds) / 1000;\n\n    return now > exp;\n}"]},"metadata":{},"sourceType":"module"}