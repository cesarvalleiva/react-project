{"ast":null,"code":"import { basePath, apiVersion } from './config';\nexport function signUpApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-up`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    if (result.user) {\n      return {\n        ok: true,\n        message: 'Usuario creado con éxito'\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function signInApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-in`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getUsersApi(token) {\n  const url = `${basePath}/${apiVersion}/users`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getUsersActiveApi(token, status) {\n  const url = `${basePath}/${apiVersion}/users-active?active=${status}`;\n  const params = {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexpor;","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/api/user.js"],"names":["basePath","apiVersion","signUpApi","data","url","params","method","body","JSON","stringify","headers","fetch","then","response","json","result","user","ok","message","catch","err","signInApi","getUsersApi","token","Authorization","getUsersActiveApi","status","expor"],"mappings":"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","sourcesContent":["import { basePath, apiVersion } from './config';\n\nexport function signUpApi(data) {\n    const url = `${basePath}/${apiVersion}/sign-up`;\n    const params = {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    };\n\n    return fetch(url, params)\n    .then(response => {\n            return response.json();\n        }).then(result => {\n            if(result.user) {\n                return { ok: true, message: 'Usuario creado con éxito' };\n            } \n            return { ok: false, message: result.message };\n        }).catch(err => {\n            return { ok: false, message: err.message };\n        })\n}\n\nexport function signInApi(data) {\n    const url = `${basePath}/${apiVersion}/sign-in`;\n    const params = {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        };\n\n    return fetch(url, params)\n    .then(response => {\n            return response.json();\n        }).then(result => {\n            return result;\n        }).catch(err => {\n            return err.message\n        })\n}\n\nexport function getUsersApi(token) {\n    const url = `${basePath}/${apiVersion}/users`;\n    const params = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: token\n            }\n        };\n\n    return fetch(url, params)\n    .then(response => {\n        return response.json();\n    })\n    .then(result => {\n        return result;\n    })\n    .catch(err => {\n        return err.message;\n    });\n}\n\nexport function getUsersActiveApi(token, status) {\n    const url = `${basePath}/${apiVersion}/users-active?active=${status}`;\n    const params = {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: token\n            }\n        };\n\n    return fetch(url, params)\n    .then(response => {\n        return response.json();\n    })\n    .then(result => {\n        return result;\n    })\n    .catch(err => {\n        return err.message;\n    });\n}\n\nexpor"]},"metadata":{},"sourceType":"module"}