{"ast":null,"code":"var _jsxFileName = \"/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/RegisterForm/RegisterForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { emailValidation, minLengthValidation } from '../../../utils/formValidation';\nimport { signUpApi } from '../../../api/user';\nimport './RegisterForm.scss';\nexport default function RegisterForm() {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n    repeatPassword: \"\",\n    privacyPolicy: false\n  });\n  const [formValid, setFormValid] = useState({\n    email: false,\n    password: false,\n    repeatPassword: false,\n    privacyPolicy: false\n  });\n\n  const changeForm = e => {\n    if (e.target.name === \"privacyPolicy\") {\n      setInputs({ ...inputs,\n        [e.target.name]: e.target.checked\n      });\n    } else {\n      setInputs({ ...inputs,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n\n  const inputValidation = e => {\n    const {\n      type,\n      name\n    } = e.target;\n\n    if (type === \"email\") {\n      setFormValid({ ...formValid,\n        [name]: emailValidation(e.target)\n      });\n    }\n\n    if (type === \"password\") {\n      setFormValid({ ...formValid,\n        [name]: minLengthValidation(e.target, 6)\n      });\n    }\n\n    if (type === \"checkbox\") {\n      setFormValid({ ...formValid,\n        [name]: e.target.checked\n      });\n    }\n  };\n\n  const register = async () => {\n    const {\n      email,\n      password,\n      repeatPassword,\n      privacyPolicy\n    } = formValid;\n    const emailVal = inputs.email;\n    const passwordVal = inputs.password;\n    const repeatPasswordVal = inputs.repeatPassword;\n    const privacyPolicyVal = inputs.privacyPolicy;\n\n    if (!emailVal || !passwordVal || !repeatPasswordVal || !privacyPolicyVal) {\n      notification['error']({\n        message: 'Todos los campos son obligatorios.'\n      });\n    } else {\n      if (passwordVal !== repeatPasswordVal) {\n        notification['error']({\n          message: 'Las contraseÃ±as no coinciden.'\n        });\n      } else {\n        const result = await signUpApi(inputs);\n\n        if (!result.ok) {\n          notification['error']({\n            message: result.message\n          });\n        } else {\n          notification['success']({\n            message: result.message\n          });\n        }\n      }\n    }\n  };\n\n  const resetForm = () => {\n    const inputs = document.getElementByTagName('input');\n\n    for (let i = 0; i < inputs.length; i++) {\n      inputs[i];\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Form, {\n    className: \"register-form\",\n    onFinish: register,\n    onChange: changeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }),\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Correo electr\\xF3nico\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 29\n      }\n    }),\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      style: {\n        color: \"rgba(0,0,0,.25)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }),\n    type: \"password\",\n    name: \"repeatPassword\",\n    placeholder: \"Repetir Contrase\\xF1a\",\n    className: \"register-form__input\",\n    onChange: inputValidation,\n    value: inputs.repeatPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    name: \"privacyPolicy\",\n    onChange: inputValidation,\n    checked: inputs.privacyPolicy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"He le\\xEDdo y acepto la pol\\xEDtica de privacidad\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    className: \"register-form__button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }, \"Crear cuenta\")));\n}","map":{"version":3,"sources":["/Users/cesarvalleiva/Desktop/proyectos/web/client/src/components/Admin/RegisterForm/RegisterForm.js"],"names":["React","useState","Form","Input","Button","Checkbox","notification","UserOutlined","LockOutlined","emailValidation","minLengthValidation","signUpApi","RegisterForm","inputs","setInputs","email","password","repeatPassword","privacyPolicy","formValid","setFormValid","changeForm","e","target","name","checked","value","inputValidation","type","register","emailVal","passwordVal","repeatPasswordVal","privacyPolicyVal","message","result","ok","resetForm","document","getElementByTagName","i","length","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Input, Button, Checkbox, notification } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { emailValidation, minLengthValidation } from '../../../utils/formValidation';\nimport { signUpApi } from '../../../api/user';\n\nimport './RegisterForm.scss';\n\nexport default function RegisterForm() {\n    const [inputs, setInputs] = useState({\n        email: \"\",\n        password: \"\",\n        repeatPassword: \"\",\n        privacyPolicy: false\n    });\n\n    const [formValid, setFormValid] = useState({\n        email: false,\n        password: false,\n        repeatPassword: false,\n        privacyPolicy: false\n    });\n\n    const changeForm = e => {\n        if(e.target.name === \"privacyPolicy\"){\n            setInputs({\n                ...inputs,\n                [e.target.name]: e.target.checked\n            })\n        } else {\n            setInputs({\n                ...inputs,\n                [e.target.name]: e.target.value\n            })\n        }\n    };\n\n    const inputValidation = e => {\n        const {type, name} = e.target;\n\n        if(type === \"email\") {\n            setFormValid({\n                ...formValid,\n                [name]: emailValidation(e.target)\n            })\n        }\n\n        if(type === \"password\") {\n            setFormValid({\n                ...formValid,\n                [name]: minLengthValidation(e.target, 6)\n            })\n        }\n\n        if(type === \"checkbox\") {\n            setFormValid({\n                ...formValid,\n                [name]: e.target.checked\n            })\n        }\n    }\n\n    const register = async () => {\n        const { email, password, repeatPassword, privacyPolicy } = formValid;\n\n        const emailVal = inputs.email;\n        const passwordVal = inputs.password;\n        const repeatPasswordVal = inputs.repeatPassword;\n        const privacyPolicyVal = inputs.privacyPolicy;\n\n        if(!emailVal || !passwordVal || !repeatPasswordVal || !privacyPolicyVal) {\n            notification['error']({\n                message: 'Todos los campos son obligatorios.'\n            })\n        } else {\n            if (passwordVal !== repeatPasswordVal) {\n                notification['error']({\n                    message: 'Las contraseÃ±as no coinciden.'\n                })\n            } else {\n                const result = await signUpApi(inputs);\n                \n                if(!result.ok) {\n                    notification['error']({\n                        message: result.message\n                    })\n                } else {\n                    notification['success']({\n                        message: result.message\n                    })\n                }\n            }\n        }\n    }\n\n    const resetForm = () => {\n        const inputs = document.getElementByTagName('input');\n\n        for(let i=0; i<inputs.length; i++){\n            inputs[i]\n        }\n    }\n\n    return(\n        <Form className=\"register-form\" onFinish={register} onChange={changeForm}>\n            <Form.Item>\n                <Input\n                    prefix={<UserOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Correo electrÃ³nico\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.email}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input\n                    prefix={<LockOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"ContraseÃ±a\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.password}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Input\n                    prefix={<LockOutlined style={{color: \"rgba(0,0,0,.25)\"}} />}\n                    type=\"password\"\n                    name=\"repeatPassword\"\n                    placeholder=\"Repetir ContraseÃ±a\"\n                    className=\"register-form__input\"\n                    onChange={inputValidation}\n                    value={inputs.repeatPassword}\n                />\n            </Form.Item>\n            <Form.Item>\n                <Checkbox\n                    name=\"privacyPolicy\"\n                    onChange={inputValidation}\n                    checked={inputs.privacyPolicy}\n                >\n                    He leÃ­do y acepto la polÃ­tica de privacidad\n                </Checkbox>\n            </Form.Item>\n            <Form.Item>\n                <Button htmlType=\"submit\" className=\"register-form__button\">\n                    Crear cuenta\n                </Button>\n            </Form.Item>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}